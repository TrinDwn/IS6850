1.	Give total count for all executive, under paid, and paid well category
	
  SELECT a.category, count(*) FROM  (SELECT first_name, salary,
			CASE
				WHEN salary < 100000 THEN ‘UNDER PAID’
				WHEN salary > 100000 AND salary < 160000 THEN ‘PAID WELL’
				WHEN salary > 160000 THEN ‘EXECUTIVE’
				ELSE ‘UNPAID’
		END as category
		FROM EMPLOYEES
		Order by salary desc) a
		GROUP BY a.category
    
    
2.	Transpose data from below query and create columns for each category


	SELECT department, count (*)
	FROM employees
	WHERE department IN (‘Sports’, ‘Tools’, ‘Clothing’, ‘Computers’)
	GROUP BY department
  
Resolution:

SELECT SUM(CASE WHEN department = ‘Sports’ THEN 1 ELSE 0 END) as Sports_Employees,
	 SUM(CASE WHEN department = ‘Sports’ THEN 1 ELSE 0 END) as Tools_Employees,
	SUM(CASE WHEN department = ‘Sports’ THEN 1 ELSE 0 END) as Clothing_Employees,
	SUM(CASE WHEN department = ‘Sports’ THEN 1 ELSE 0 END) as Computers_Employees
FROM employees;



3.	
SELECT first_name
CASE WHEN region_id = 1 THEN (SELECT country FROM regions WHERE region_id = 1) END region_1,
CASE WHEN region_id = 2 THEN (SELECT country FROM regions WHERE region_id = 2) END region_2,
CASE WHEN region_id = 3 THEN (SELECT country FROM regions WHERE region_id = 3) END region_3,
CASE WHEN region_id = 4 THEN (SELECT country FROM regions WHERE region_id = 4) END region_4,
CASE WHEN region_id = 5 THEN (SELECT country FROM regions WHERE region_id = 5) END region_5,
CASE WHEN region_id = 6 THEN (SELECT country FROM regions WHERE region_id = 6) END region_6,
CASE WHEN region_id = 7 THEN (SELECT country FROM regions WHERE region_id = 7) END region_7,
FROM employees

4.	Write a query that displays 3 columns. The query should display the fruit and it’s total supply along with a category of either LOW, ENOUGH or FULL. Low category means that the total supply of the fruit is less than 20,000. The enough category means that the total supply is between 20,000 and 50,000. If the total supply is greater than 50,000 then that fruit falls in the full category.

	SELECT name, total_supply,
		CASE WHEN total_supply < 20000 THEN ‘LOW’
    			 WHEN total_supply >= 20000 AND total_supply <= 50000 THEN ‘ENOUGH’
    			 WHEN total_supply > 50000 THEN ‘FULL’
		END as category
	FROM (
		SELECT name, sum(supply) total_supply
		FROM fruit_imports
		GROUP BY name
    		) a


5.	Taking into consideration the supply column and the cost_per_unit column, you should be able to tabulate the total cost to import fruits by each season. The result will look something like this:
“Winter” “10072.50”
“Summer” “19623.00”
“All Year” “22688.00”
“Spring” “29930.00”
“Fall” “29035.00”
Write a query that would transpose this data so that the seasons become columns and the total cost for each season fills the first row?

	SELECT SUM(CASE WHEN season = ‘Winter’ THEN total_cost end) as Winter_total,
		SUM(CASE WHEN season = ‘Summer’ THEN total_cost end) as Summer_total,
		SUM(CASE WHEN season = ‘Spring’ THEN total_cost end) as Spring_total,
		SUM(CASE WHEN season = ‘Fall’ THEN total_cost end) as Spring_total,
		SUM(CASE WHEN season = ‘All Year’ THEN total_cost end) as Spring_total
	FROM (
		SELECT season, SUM(supply * cost_per_unit) total_cost
		FROM fruit_imports
		GROUP BY
  		  ) a
